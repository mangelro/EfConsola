PRAGMA encoding = "UTF-16"; 
PRAGMA foreign_keys=off;


DROP TABLE AUTHOR_DB;
DROP TABLE BLOG_DB;
DROP TABLE POST_DB;
DROP TABLE PROJECT_DB;


BEGIN TRANSACTION;

CREATE TABLE IF NOT EXISTS AUTHOR_DB 
(
	AuthorId TEXT PRIMARY KEY,
	Name TEXT NOT NULL,
	Years INTEGER NOT NULL,
	Street TEXT NOT NULL,
	Location TEXT NOT NULL,
	ZipCode TEXT NOT NULL,
	Province TEXT NOT NULL,
	Country TEXT NOT NULL

);

CREATE INDEX IF NOT EXISTS AUTOR_NAME  ON  AUTHOR_DB(Name) 

CREATE TABLE IF NOT EXISTS BLOG_DB 
(
	BlogId INTEGER PRIMARY KEY AUTOINCREMENT,
	Url TEXT NOT NULL,
	AuthorId TEXT NOT NULL,	
    CreadoPor TEXT NULL,
    CreadoEn TEXT NULL,

	CONSTRAINT url_unique UNIQUE (Url),
	
	CONSTRAINT fk_author
    	FOREIGN KEY (AuthorId)
	    REFERENCES AUTHOR_DB(AuthorId)
	    ON DELETE NO ACTION
        ON UPDATE NO ACTION

);


CREATE TABLE IF NOT EXISTS POST_DB 
( 
	PostId INTEGER PRIMARY KEY AUTOINCREMENT,
  	Title TEXT NOT NULL,
  	Content TEXT,
  	BlogId INTEGER,
    Valoracion INTEGER DEFAULT (0) NOT NULL,
    Activo INTEGER NOT NULL DEFAULT 1,
    
    CONSTRAINT title_unique UNIQUE (Title),
    
  	CONSTRAINT fk_blog
    	FOREIGN KEY (BlogId)
	    REFERENCES BLOG_DB(BlogId)
	    ON DELETE CASCADE 
        ON UPDATE NO ACTION
);


CREATE TABLE IF NOT EXISTS PROJECT_DB 
(
	ProjectId INTEGER PRIMARY KEY AUTOINCREMENT,

	ProjectCode TEXT NOT NULL,
	ProjectApp TEXT NOT NULL,
	
	FechaFin TEXT NULL,
	Name TEXT NOT NULL,
    CreadoPor TEXT NULL,
    CreadoEn TEXT NULL,


	CONSTRAINT natureId_unique UNIQUE (ProjectCode,ProjectApp)
);




COMMIT;

PRAGMA foreign_keys=on;

